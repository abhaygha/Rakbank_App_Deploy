name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1  # Set the AWS region as an environment variable

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'
        java-package: 'jdk'
        architecture: 'x64'
        check-latest: false
        server-id: 'github'
        server-username: ${{ secrets.GITHUB_ACTOR }}
        server-password: ${{ secrets.GITHUB_TOKEN }}
        overwrite-settings: true

    - name: Build with Maven
      run: mvn clean package

    - name: List target directory contents
      run: ls -l target

    - name: Determine Docker image tag
      id: get_version
      run: |
        if [ "${GITHUB_REF_TYPE}" == "tag" ]; then
          VERSION=${GITHUB_REF_NAME}
        else
          VERSION=$(git describe --tags --always)
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "VERSION=$VERSION"  # Debug output

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: false
        registry-type: private
        skip-logout: false

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: 891377120087.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: rakbank
        VERSION: ${{ env.VERSION }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION

    - name: Grant execute permission to deploy.sh
      run: chmod +x ./deploy.sh

    - name: Create kubeconfig directory
      run: mkdir -p $HOME/.kube

    - name: Set up kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
    
    - name: Print Kubeconfig
      run: cat $HOME/.kube/config
    
    - name: Check Kubeconfig permissions
      run: ls -l $HOME/.kube/config

    - name: Run deploy.sh
      run: |
        export KUBECONFIG=$HOME/.kube/config
        ./deploy.sh ${{ env.VERSION }}
      env:
        AWS_REGION: us-east-1
        JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.11-9/x64
        VERSION: ${{ env.VERSION }}
        AWS_DEFAULT_REGION: us-east-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        KUBECONFIG: ${{ secrets.KUBECONFIG }}

    - name: Analyze with SonarCloud
      uses: sonarsource/sonarcloud-github-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
          organization: "abhaygha"  # Replace with your SonarCloud organization key
          projectKey: "abhaygha_Rakbank_App_Deploy"  # Replace with your SonarCloud project key
          projectName: "RakBank_App_deploy"
